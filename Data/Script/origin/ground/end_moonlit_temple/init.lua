--[[
    init.lua
    Created: 02/08/2023 20:34:57
    Description: Autogenerated script file for the map moonlit_end.
]]--
-- Commonly included lua functions and data
require 'origin.common'

-- Package name
local moonlit_end = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = STRINGS.MapStrings['SomeStringName']


-------------------------------
-- Map Callbacks
-------------------------------
---moonlit_end.Init
--Engine callback function
function moonlit_end.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!


end

---moonlit_end.Enter
--Engine callback function
function moonlit_end.Enter(map)
  if SV.moonlit_end.ReturnVisit then
    moonlit_end.PrepareReturnVisit()
  elseif SV.moonlit_end.BattleComplete then
    
	return
  elseif SV.moonlit_end.BattleFailed then
  
    return
  end
  
  UI:WaitShowTitle(GAME:GetCurrentGround().Name:ToLocal(), 20)
  GAME:WaitFrames(30)
  UI:WaitHideTitle(20)
  GAME:FadeIn(20)

end


--------------------------------------------------
-- Map Setup Functions
--------------------------------------------------
function moonlit_end.PrepareReturnVisit()
  GROUND:Hide("Cutscene_Trigger")
  GROUND:Hide("Cresselia")
end

-------------------------------
-- Entities Callbacks
-------------------------------

function moonlit_end.Cutscene_Trigger_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  local cresselia = CH('Cresselia')
  
  
  GAME:CutsceneMode(true)
  -- move camera up a little more: center at 196, 264
  GAME:MoveCamera(204, 192, 60, false)
  
  UI:SetSpeaker(STRINGS:Format("\\uE040"))
  
  if not SV.moonlit_end.ExpositionComplete then
    UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_001']))
  end
  
  UI:SetSpeaker(cresselia)
  if SV.guildmaster_summit.GameComplete then
    UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_002_Postgame'], GAME:GetTeamName()))
  else
    UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_002_Default'], GAME:GetTeamName()))
  end
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_003']))
  
  UI:ChoiceMenuYesNo(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Ask_Join']), false)
  UI:WaitForChoice()
  ch = UI:ChoiceResult()
  
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_004']))
  
  SV.moonlit_end.ExpositionComplete = true
  
  if not ch then
    
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_Reject']))
	
    SOUND:FadeOutBGM()
    GAME:FadeOut(false, 30)
    GAME:CutsceneMode(false)
    GAME:WaitFrames(120)
    
    COMMON.EndDungeonDay(RogueEssence.Data.GameProgress.ResultType.Cleared, 'guildmaster_island', -1, 3, 2)
	
	return
  end
  
  
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_Accept']))
  

  local mon_id = RogueEssence.Dungeon.MonsterID("cresselia", 0, "normal", Gender.Genderless)
  local recruit = _DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, mon_id, 30, "", 0)
  local talk_evt = RogueEssence.Dungeon.BattleScriptEvent("AllyInteract")
  recruit.ActionEvents:Add(talk_evt)
	
  COMMON.JoinTeamWithFanfare(recruit, false)
  
  SOUND:FadeOutBGM()
  GAME:FadeOut(false, 30)
  GAME:CutsceneMode(false)
  GAME:WaitFrames(90)

  SV.moonlit_end.ReturnVisit = true
  
  COMMON.EndDungeonDay(RogueEssence.Data.GameProgress.ResultType.Cleared, 'guildmaster_island', -1, 4, 0)
end
  
function moonlit_end.StartBattle()

  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_005']))
  
  --flash
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_006']))
  
  --spawn attackers
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_007']))
  
  --begin the battle
  
  GAME:WaitFrames(30)
  
  COMMON.BossTransition()
  
  GAME:CutsceneMode(false)
  
  GAME:ContinueDungeon('moonlit_courtyard', 2, 0, 0)
  
--Turn 0:
--Lunatone Lv28
--Purugly Lv28
--Clefable Lv28
--Ribombee Lv28

--Turn 3:
--Florges Lv28
--Roserade Lv28

--Turn 6:
--Gardevoir Lv28
--Gallade Lv28

--4 at a time
--only aim for cresselia
--boss battle ends if anyone is dead at the end of the turn
--or if 10 turns pass.

--No orbs or machines allowed

--Cresselia Lv30:
--Moonlight
--Safeguard
--Aurora Beam
--Confusion
  
  
end

function moonlit_end.PostBattle_Fail()
  
  local cresselia = CH('Cresselia')
  
  GAME:CutsceneMode(true)
  
  GAME:MoveCamera(204, 192, 1, false)
  
  GAME:FadeIn(20)
  
  UI:SetSpeaker(cresselia)
  
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Post_Cutscene_Line_001']))
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Post_Cutscene_Line_Fail']))
  
  SOUND:FadeOutBGM()
  GAME:FadeOut(false, 30)
  GAME:CutsceneMode(false)
  GAME:WaitFrames(90)
  
  
  SV.moonlit_end.BattleFailed = false
  SV.moonlit_end.ReturnVisit = true
  
  COMMON.EndDungeonDay(RogueEssence.Data.GameProgress.ResultType.Cleared, 'guildmaster_island', -1, 3, 2)
  
end

function moonlit_end.PostBattle_Success()

  local cresselia = CH('Cresselia')
  
  GAME:CutsceneMode(true)
  
  GAME:MoveCamera(204, 192, 1, false)
  
  GAME:FadeIn(20)
  
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Post_Cutscene_Line_001']))
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Post_Cutscene_Line_Success']))
  UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['Expo_Cutscene_Line_Accept']))
  

  local mon_id = RogueEssence.Dungeon.MonsterID("cresselia", 0, "normal", Gender.Genderless)
  local recruit = _DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, mon_id, 30, "", 0)
  local talk_evt = RogueEssence.Dungeon.BattleScriptEvent("AllyInteract")
  recruit.ActionEvents:Add(talk_evt)
	
  COMMON.JoinTeamWithFanfare(recruit, false)
  
  SOUND:FadeOutBGM()
  GAME:FadeOut(false, 30)
  GAME:CutsceneMode(false)
  GAME:WaitFrames(90)

  SV.moonlit_end.BattleComplete = false
  SV.moonlit_end.ReturnVisit = true
  
  COMMON.EndDungeonDay(RogueEssence.Data.GameProgress.ResultType.Cleared, 'guildmaster_island', -1, 3, 2)
  
end

function moonlit_end.South_Exit_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  -- ask to complete the dungeon and go back
  UI:ResetSpeaker()
  UI:ChoiceMenuYesNo(STRINGS:FormatKey("DLG_ASK_EXIT_DUNGEON"), false)
  UI:WaitForChoice()
  ch = UI:ChoiceResult()
  if ch then
    SOUND:FadeOutBGM()
    GAME:FadeOut(false, 30)
    GAME:WaitFrames(120)
    
    COMMON.EndDungeonDay(RogueEssence.Data.GameProgress.ResultType.Cleared, 'guildmaster_island', -1, 3, 2)
  end
end


return moonlit_end

