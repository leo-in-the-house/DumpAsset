<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Expo_Cutscene_Line_001" xml:space="preserve">
    <value>哦，[pause=30]有客人吗？</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_002" xml:space="preserve">
    <value>欢迎来到我的花园小角。[pause=30]\n你可以叫我{0}。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_003" xml:space="preserve">
    <value>你愿意和我一起野餐吗？</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_004" xml:space="preserve">
    <value>如果你能找到这个地方，那你肯定是位隐姓埋名的大师。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_005" xml:space="preserve">
    <value>你是探险队的一员吗？</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_006" xml:space="preserve">
    <value>啊，[pause=20]{0}。\u266A[pause=0]\n很高兴认识你。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_007" xml:space="preserve">
    <value>我曾经是一名探险队员…… [pause=0]\n确切地说，是公会的一员。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_008" xml:space="preserve">
    <value>那是个绝妙的队伍，有着难以置信的领导者。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_009" xml:space="preserve">
    <value>大家，[pause=0]一起结交了许多盟友，[pause=0]进行了数以万计次救援。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_010" xml:space="preserve">
    <value>回想起我们所取得的一切，感激之情仍然充盈我心。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_011" xml:space="preserve">
    <value>这座岛屿是我们所有行动的大本营。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_012" xml:space="preserve">
    <value>每个成员在这里都有自己的一席之地，然而没有人知道这里的一切。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_013" xml:space="preserve">
    <value>充满了秘密，[pause=0]就像这片小树林。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_014" xml:space="preserve">
    <value>但是有一天，[pause=20]我们的会长突然失踪了……</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_015" xml:space="preserve">
    <value>谢谢你能和我野餐。[pause=0]非常感激你的陪伴。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_016" xml:space="preserve">
    <value>除了会长，[pause=0]你是第一个能在这找到我的人。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_017" xml:space="preserve">
    <value>所以……[pause=0]请允许我加入你们，[pause=0]与你们的公会为伴！</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_018" xml:space="preserve">
    <value>我们可以寻找老公会的其他秘密……[pause=20]一起！</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_019" xml:space="preserve">
    <value>出于往昔的情感，[pause=0]我们把这地方保密吧。</value>
    <comment></comment>  </data>
  <data name="Expo_Cutscene_Line_020" xml:space="preserve">
    <value>那是我们的小秘密。\u266A</value>
    <comment></comment>  </data>
</root>