<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Evo_Ask" xml:space="preserve">
    <value>你想要进化吗？</value>
    <comment></comment>  </data>
  <data name="Evo_Ask_Who" xml:space="preserve">
    <value>哪只宝可梦想要进化呢？</value>
    <comment></comment>  </data>
  <data name="Evo_Begin" xml:space="preserve">
    <value>寻求觉醒的你，[pause=0]开始进化吧。</value>
    <comment></comment>  </data>
  <data name="Evo_Choice" xml:space="preserve">
    <value>{0}要进化成什么？</value>
    <comment></comment>  </data>
  <data name="Evo_Complete" xml:space="preserve">
    <value>{0}进化成了{1}！</value>
    <comment></comment>  </data>
  <data name="Evo_Confirm" xml:space="preserve">
    <value>{0}将会进化成{1}。可以吗？</value>
    <comment></comment>  </data>
  <data name="Evo_Confirm_Item" xml:space="preserve">
    <value>{0}进化成{2}，需要用到{1}。[pause=20]可以吗？</value>
    <comment></comment>  </data>
  <data name="Evo_End" xml:space="preserve">
    <value>如果进化是你所求，就回来这里吧……</value>
    <comment></comment>  </data>
  <data name="Evo_Info_001" xml:space="preserve">
    <value>在宝可梦中，有一些种类可以进化。</value>
    <comment></comment>  </data>
  <data name="Evo_Info_002" xml:space="preserve">
    <value>这样的宝可梦在满足了特定条件后就可以进化。</value>
    <comment></comment>  </data>
  <data name="Evo_Info_003" xml:space="preserve">
    <value>进化会带来外表和能力的改变。</value>
    <comment></comment>  </data>
  <data name="Evo_Info_004" xml:space="preserve">
    <value>不仅如此，一些宝可梦甚至改变了属性，学到了不同的招式。</value>
    <comment></comment>  </data>
  <data name="Evo_Info_005" xml:space="preserve">
    <value>不过……[pause=0]进化所需的条件随着宝可梦的不同而不同。</value>
    <comment></comment>  </data>
  <data name="Evo_Info_006" xml:space="preserve">
    <value>你还必须清楚的是：</value>
    <comment></comment>  </data>
  <data name="Evo_Info_007" xml:space="preserve">
    <value>一旦一只宝可梦进化了，它将永远不能变回之前的形态。</value>
    <comment></comment>  </data>
  <data name="Evo_Intro_1" xml:space="preserve">
    <value>……[pause=0]从某处传来了声音。</value>
    <comment></comment>  </data>
  <data name="Evo_Intro_2" xml:space="preserve">
    <value>你……寻求觉醒的你……[pause=0]这里是光之泉。</value>
    <comment></comment>  </data>
  <data name="Evo_None" xml:space="preserve">
    <value>……[pause=0]{0}不能再进化了。</value>
    <comment></comment>  </data>
  <data name="Evo_None_Now" xml:space="preserve">
    <value>……[pause=0]{0}现在还不能进化。</value>
    <comment></comment>  </data>
  <data name="Evo_Option_Evolve" xml:space="preserve">
    <value>进化</value>
    <comment></comment>  </data>
</root>