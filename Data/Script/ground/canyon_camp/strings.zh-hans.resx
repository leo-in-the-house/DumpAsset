<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Dragon_Line_001" xml:space="preserve">
    <value>摧枯拉朽之火力！</value>
    <comment></comment>  </data>
  <data name="Dragon_Line_002" xml:space="preserve">
    <value>畏惧眼神之犀利！</value>
    <comment></comment>  </data>
  <data name="Dragon_Line_003" xml:space="preserve">
    <value>硕大无朋之展翼！</value>
    <comment></comment>  </data>
  <data name="Dragon_Line_004" xml:space="preserve">
    <value>我们是龙族队！[pause=30]不可思议迷宫之君！</value>
    <comment></comment>  </data>
  <data name="Fairy_Line_001" xml:space="preserve">
    <value>你见过妖精环圈吗？[pause=0]那是长在森林地表上的一圈蘑菇。[br]传说它们有种特殊的力量……</value>
    <comment></comment>  </data>
  <data name="Hidden_Line_001" xml:space="preserve">
    <value>……[pause=0]你注意到我了。[pause=0]\n直觉不错。[br]帮我保密，[pause=0]我告诉你个秘密。[br]打开你的地图。</value>
    <comment></comment>  </data>
  <data name="Hidden_Line_002" xml:space="preserve">
    <value>我的搭档想去这个迷宫探险。[pause=0]我不感兴趣。</value>
    <comment></comment>  </data>
  <data name="Hidden_Line_003" xml:space="preserve">
    <value>一点。[pause=30]也不。</value>
    <comment></comment>  </data>
  <data name="Seeker_Line_001" xml:space="preserve">
    <value>我想知道我的搭档去哪了。[pause=0]我们应该去个新的迷宫。</value>
    <comment></comment>  </data>
  <data name="Seeker_Line_002" xml:space="preserve">
    <value>你说什么？[pause=0]你想知道那个迷宫在哪？</value>
    <comment></comment>  </data>
  <data name="Seeker_Line_003" xml:space="preserve">
    <value>哈！[pause=0]我可能是夏季最响亮的虫子，[pause=30]但你永远别想借此窃听我的情报！</value>
    <comment></comment>  </data>
  <data name="Shiny_Line_001" xml:space="preserve">
    <value>你见过闪光宝可梦吗？[pause=0]他们有非同寻常的体色，无论何时都光彩夺目。</value>
    <comment></comment>  </data>
  <data name="Shiny_Line_002" xml:space="preserve">
    <value>你的体色！[pause=0]看它多么闪亮！[br]毫无疑问，[pause=0]你肯定是个闪光宝可梦！</value>
    <comment></comment>  </data>
  <data name="Shiny_Line_003" xml:space="preserve">
    <value>闪光宝可梦的出现十分罕见，[pause=0]但有传言说，他们更喜欢躲在怪兽屋里。</value>
    <comment></comment>  </data>
  <data name="Shortcut_Line_001" xml:space="preserve">
    <value>*有传言说，会长他们走了条捷径抵达了山顶，他们在那里等待着将自己的职位授予新的队伍。</value>
    <comment></comment>  </data>
  <data name="Shortcut_Line_002" xml:space="preserve">
    <value>你可能会问，这条捷径在哪里？[br]为什么，[pause=0]它不是别的，而是公会会长之路！</value>
    <comment></comment>  </data>
  <data name="Storehouse_Line_007" xml:space="preserve">
    <value>[tmp]我们找到了犯罪头领的窝点。现在需要你的帮助才能捉拿他们！</value>
    <comment></comment>  </data>
  <data name="Strategy_Line_001" xml:space="preserve">
    <value>采铜矿场内的钢属性宝可梦轻松抵御了我们所有的攻击。[br]我们需要制定策略。[pause=0]\n让我想想大家还能用哪些招式……</value>
    <comment></comment>  </data>
</root>